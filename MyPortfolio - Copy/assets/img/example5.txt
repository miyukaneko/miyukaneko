//TAB exercise 5
Flower[] flowerBasket;

void setup() {
  size(800,800);
  colorMode(RGB, 100);
  background(80);

  noStroke();
  
  int x = int(random(-50, 100));
  int y = int(random(-100, 100));
  
  flowerBasket = new Flower[20];
  for (int i = 0; i < flowerBasket.length; i++) {
    flowerBasket[i] = new Flower(x + int(random(-100, 100)), y + int(random(-100, 100)), width, height);
    
    x += 200 + int(random(0, 100));
    if (x > width - 100) {
      y += 200 + int(random(0, 100));
      x = int(random(-50, 100));
    }
  }
}

void draw() {
  background(80);
  for (int i = 0; i < flowerBasket.length; i++) {
    flowerBasket[i].scaleUpdate();    
    flowerBasket[i].display();
  }
 //if (frameCount < 500 ) {
 // saveFrame("images/face-######.png");
 //}
}

//OBJECT TAB flower

class Flower {
  int x; 
  int y;
  float rot; //rotation
  float[] r;//color
  float[] g;//color
  float[] b;//color
  float alpha; //transparancy
  float sc; //scale
  float grow; //growth rate
  int winWidth;
  int winHeight;
  int speed;
 
  Flower(int lox, int loy, int newWidth, int newHeight) {
    x = lox;
    y = loy;
    sc = random(0.8, 1.8);
    grow = random(0.008,0.012);
    alpha = int(random(60,90));
    rot = 0.1;
    r = new float[5];
    g = new float[5];
    b = new float[5];
    float colorR = int(random(255));
    float colorG = int(random(255));
    float colorB = int(random(255));
    for (int i = 0; i < r.length; i++) {
      //r[i] = int(random(255));
      //g[i] = int(random(255));
      //b[i] = int(random(255));
      r[i] = colorR;
      g[i] = colorG;
      b[i] = colorB;
    } 
    winWidth = newWidth;
    winHeight = newHeight;
    speed = int(random(1, 5));
  }
  
  void display () {
    pushMatrix(); 
      translate(x,y);
      scale(sc);
      rotate(degrees(rot));
      petals();
      stamen();
    popMatrix();
    updatePos();
    rot += 0.001;
  }
  
  void updatePos() {
    x += speed;
    y -= speed;
    
    if (x > winWidth + 120) {
      x = -120;
    }
    if (y < -120) {
      y = winHeight + 120;
    }
  }
  
  void stamen() {
    smooth();
    noStroke();
    fill(#fff9bb); // light yellow
    scale(sc);
    ellipse(0, 0, 40, 40);//center circle
  }
  
  void petals() { 
    pushMatrix();
      smooth();
      noStroke();
      scale(sc);
      for (int i = 0; i < 5; i++) {
        fill(r[i], g[i], b[i], alpha);
        ellipse(0, -20, 50, 50);
        rotate(radians(72)); 
      }
      
    popMatrix();
  }
  
  void scaleUpdate() {
    sc += grow;
    if (sc > 1.8 || sc < 0.8) {
      grow = -grow;
    }
  }
}
  
  //pushMatrix();
  
  //translate(lox,loy);
  //rotate(radians(rot));
  //scale(sz);
  
  //popMatrix();